#!/usr/bin/env python3
"""
AI Indicator Cleanup Script
Removes emojis, AI language, and other indicators from all project files
"""

import os
import re
import glob

def clean_ai_indicators():
    """Remove AI-generated content indicators from all files."""
    
    # Files to clean
    file_patterns = [
        "*.py", "*.md", "*.html", "*.txt", "*.yml", "*.yaml", "*.json"
    ]
    
    # AI indicators to remove (emojis and AI language)
    emoji_pattern = r'[🎯🚀✅📊🔬🌐💾🔄📄🔧📈⚡🔒📱🎨🌟🏥🏆📋🎉🎓🛠️🆕🔍📁🔥🎪🔮🎭🎬🎮❤️❌ℹ️⚠️]+'
    
    ai_patterns = [
        r'GitHub Copilot.*?\n',
        r'.*AI Assistant.*?\n',
        r'.*Enhanced by AI.*?\n',
        r'.*AI-generated.*?\n',
        r'.*Generated by.*?AI.*?\n',
        r'This.*?AI.*?implementation.*?\n',
        r'.*AI programming assistant.*?\n',
    ]
    
    # Professional replacements
    replacements = {
        'Enhanced': 'Improved',
        'Comprehensive': 'Complete', 
        'Robust': 'Reliable',
        'Production-ready': 'Deployment-ready',
        'State-of-the-art': 'Advanced',
        'Cutting-edge': 'Modern',
        'comprehensive': 'complete',
        'enhanced': 'improved',
        'robust': 'reliable',
        'production-ready': 'deployment-ready',
        'state-of-the-art': 'advanced',
        'cutting-edge': 'modern'
    }
    
    files_cleaned = 0
    
    # Get all files matching patterns
    all_files = []
    for pattern in file_patterns:
        all_files.extend(glob.glob(pattern, recursive=False))
        all_files.extend(glob.glob(f"**/{pattern}", recursive=True))
    
    for filepath in set(all_files):  # Remove duplicates
        if os.path.isfile(filepath) and not filepath.endswith('cleanup_ai_indicators.py'):
            try:
                with open(filepath, 'r', encoding='utf-8', errors='ignore') as f:
                    content = f.read()
                
                original_content = content
                
                # Remove emojis
                content = re.sub(emoji_pattern, '', content)
                
                # Remove AI-specific patterns
                for ai_pattern in ai_patterns:
                    content = re.sub(ai_pattern, '', content, flags=re.IGNORECASE)
                
                # Replace AI-style language
                for old, new in replacements.items():
                    content = content.replace(old, new)
                
                # Remove excessive exclamation marks
                content = re.sub(r'!{2,}', '!', content)
                
                # Remove excessive equal signs and dashes
                content = re.sub(r'={20,}', '=' * 50, content)
                content = re.sub(r'-{20,}', '-' * 50, content)
                
                # Clean up extra whitespace
                content = re.sub(r'\n{3,}', '\n\n', content)
                content = re.sub(r'[ \t]+\n', '\n', content)
                
                # Remove lines that are just symbols
                lines = content.split('\n')
                cleaned_lines = []
                for line in lines:
                    stripped = line.strip()
                    # Skip lines that are just symbols/emojis or repetitive patterns
                    if not re.match(r'^[=\-\*#\s]*$', stripped) or len(stripped) < 10:
                        cleaned_lines.append(line)
                    elif len(stripped) > 0:  # Keep non-empty lines
                        cleaned_lines.append(line)
                content = '\n'.join(cleaned_lines)
                
                if content != original_content:
                    with open(filepath, 'w', encoding='utf-8') as f:
                        f.write(content)
                    files_cleaned += 1
                    print(f"Cleaned: {filepath}")
                    
            except Exception as e:
                print(f"Error cleaning {filepath}: {e}")
    
    print(f"\nCleaned {files_cleaned} files")
    return files_cleaned

if __name__ == "__main__":
    print("Starting AI indicator cleanup...")
    files_cleaned = clean_ai_indicators()
    print(f"\nCleanup complete! Modified {files_cleaned} files.")
    print("\nFiles have been cleaned of AI indicators.")
    print("Review the changes and commit when ready.")
